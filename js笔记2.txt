wucy
520wucy

DOM 全称Document Objec Model 文档对象模型
文档表示整个html网页
对象表示将网页中的每一个部分都转换为一个对象
使用模型来表示对象之间的关系，这样方便我们获取对象。
节点：Node 构成html文档最基本的单元
文档节点:整个html文档
元素节点：html文档中的html标签
属性节点：元素的属性
文本节点：html标签中的文本内容
浏览器已经提供了文档节点对象 document
var 变量=document.getElementById("id名");
变量.innerHTML="";
事件，
onload事件会在整个页面加载完成之后才触发为windo绑定一个onload事件
该事件对应的响应函数将会在页面加载完成之后执行，这样可以确保我们的代码执行时
所有的DOM对象已经加载完毕了。
getElementById() getElementsByTagName() getElementsByName() 带s的返回数组
获取父节点和兄弟节点 通过具体的节点调用
1.parentNode -属性，表示当前节点的父节点
2.previousSibling -属性，表示当前节点的前一个兄弟节点
3.nextSibling -属性，表示当前节点的后一个兄弟节点
innerHTML
innerText-该属性可以获取元素内部的文本内容，与innerHTML不同的是它会去掉html标签
document.querySelector(".box1 div") document.querySelectorAll(".box1 div")
通过css选择器来找对象
var li=document.createElement("li")
var gztext=document.createTextNode("广州")
li.appendChild(gztext);
city.replaceChild(li,bj);       city.removeChild(bj)=bj.parentNode.removeRemove(bj)
 onmouseenter
 onmouseleave 鼠标移入移出事件函数
div获取焦点 添加一个属性值 <div tabindex="100">哈哈</div>
当一个元素设置浮动后，要看其包含快是否设置了高度，如没有则要开启BFC解决高度塌陷
例如：overflow:hidden;    position：absolute；
childNodes儿子节点
children儿子元素 拿的是儿子不会有孙子
parentNode父节点      两个拿的都是一样的不会拿爷爷
parentElement父元素
document.documentElement    document.body
不知道循环次数就用while循环
以下方法都是父元素调用，操作元素
插入节点：insertBefore(新节点，参照节点）
替换节点：replaceChild（新节点，被替换的节点）
删除节点：removeChild(被删除的节点）
追加节点：appendChild(被追加的几点）
节点 remove(pc端 ie不支持）
读取和设置样式的对象都是内联样式，而样式表的样式是不能被读取的。
获取元素的当前显示的样式 元素.currentStyle.样式名。
getComputerStyle为window的方法，会返回一个对象，对象中封装了当前元素对应的样式;
第二个参数可以传递一个伪类一般为null
可以通过对象.样式名来读取样式，不支持ie一下的浏览器，alert(getComputerStyle(box1,null).width);
---------------------------------------------------------------===============
两种方法都是只读的
clientWidth clientHeight 获取可见宽度或高度9
offsetWidth offsetHeight
offsetparent
可以用来获取当前元素的定位元素 ，会获取到离当前元素最近的开启了定位的祖先元素
offsetLeft 当前元素相对于其定位父元素的水平偏移量
offsetTop 当前元素相对于其定位父元素的垂直偏移量
scrollWidth 
scrollHeight 可以获取元素整个滚动区域的高度和宽度
scrollLeft可以获取水平滚动条的距离
scrollTop可以获取垂直滚动条的距离
scrollHeight-scrollTop==clienHeight
scroolWidth-scrollLeft==clienWidth
---------------------------------------------------------------=================

事件对象-当事件的响应函数被触发时，浏览器每次都会将一个事件对象作为实参传递给响应函数
在事件对象中封装了当前事件相关的一切信息，比如：鼠标的坐标 键盘那个按键按下 鼠标滚轮滚动的方向
------------------------------------------------------
event=event||window.envent 典型的解决兼容例子
-------------------------------------------------------
在ie8及其以下的浏览器中事件对象是作为window对象的属性保存的
-事件冒泡
可以将事件对象cancelBubble设置为true来取消冒泡
-事件的委派
 指将事件统一绑定给元素的共同祖先元素，这样当后代元素上的事件触法时，
会一直冒泡到祖先元素，从而通过给祖先元素的响应函数来处理事件
事件委派是利用了冒泡，通过委派可以减少事件绑定的次数，提高程序性能。
event中的target表示触发事件的对象
-事件的绑定
addEventListener()这个方法可以为元素绑定响应函数
参数 1事件的字符串，不要加on2.回调函数 
3.是否在捕获阶段触发事件，需要一个布尔值，一般为false
例子：btn01.addEventListenner('click'，function(){}，false)
1.捕获阶段-在捕获阶段时从最外层的祖先元素进行事件的捕获，但是默认此时不会出发事件
2.目标阶段-事件捕获到目标元素，捕获结束开始在目标元素上触发事事件
3.冒泡阶段-事件从目标元素向他的祖先元素传递，依次触发祖先元素上的事件。
BOM浏览器对象模型，可以使我们通过js来操作浏览器 
Window
Navigator
Location
History 有4个属性 length back() forward() go()
Screen
